version: '3.8'

services:
  # Kafka and Zookeeper setup
  zookeeper:
    image: "bitnami/zookeeper:latest"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: "bitnami/kafka:latest"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENER=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_PORT=9092
      - KAFKA_LISTENER_NAME=PLAINTEXT
      - KAFKA_LISTENER_INTERNAL=INTERNAL
      - KAFKA_LISTENER_NAME_INTERNAL=INTERNAL
    ports:
      - "9092:9092"
    networks:
      - kafka_network
    depends_on:
      - zookeeper

  # Person Localization service
  person-localization:
    build: ./person-localization
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      - kafka

  # Student Detection service
  student-detection:
    build: ./student-detection
    ports:
      - "8001:8001"
    networks:
      - app_network
    depends_on:
      - kafka

  # Gaze Detection service
  gaze-detection:
    build: ./gaze-detection
    ports:
      - "8002:8002"
    networks:
      - app_network
    depends_on:
      - kafka

  # Hand Raising Detection service
  hand-raising-detection:
    build: ./hand-raising-detection
    ports:
      - "8003:8003"
    networks:
      - app_network
    depends_on:
      - kafka

  # Storage Proxy service (add the directory for this service once ready)
  storage-proxy:
    build: ./storage-proxy
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/school_db
    depends_on:
      - postgres
      - kafka
    networks:
      - app_network

  # PostgreSQL database service
  postgres:
    image: "bitnami/postgresql:latest"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=school_db
    ports:
      - "5432:5432"
    networks:
      - app_network

  # Prometheus for monitoring
  prometheus:
    image: "prom/prometheus:latest"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

  # Grafana for monitoring
  grafana:
    image: "grafana/grafana:latest"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - prometheus

networks:
  kafka_network:
    driver: bridge
  app_network:
    driver: bridge
